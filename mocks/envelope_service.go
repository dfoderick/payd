// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"context"
	"sync"

	"github.com/libsv/go-bc/spv"
	"github.com/libsv/go-dpp"
	"github.com/libsv/payd"
)

// Ensure, that EnvelopeServiceMock does implement payd.AncestryService.
// If this is not the case, regenerate this file with moq.
var _ payd.AncestryService = &EnvelopeServiceMock{}

// EnvelopeServiceMock is a mock implementation of payd.AncestryService.
//
// 	func TestSomethingThatUsesEnvelopeService(t *testing.T) {
//
// 		// make and configure a mocked payd.AncestryService
// 		mockedEnvelopeService := &EnvelopeServiceMock{
// 			EnvelopeFunc: func(ctx context.Context, args payd.EnvelopeArgs, req dpp.PaymentRequest) (*spv.Envelope, error) {
// 				panic("mock out the AncestryCreate method")
// 			},
// 		}
//
// 		// use mockedEnvelopeService in code that requires payd.AncestryService
// 		// and then make assertions.
//
// 	}
type EnvelopeServiceMock struct {
	// EnvelopeFunc mocks the AncestryCreate method.
	EnvelopeFunc func(ctx context.Context, args payd.EnvelopeArgs, req dpp.PaymentRequest) (*spv.Envelope, error)

	// calls tracks calls to the methods.
	calls struct {
		// AncestryCreate holds details about calls to the AncestryCreate method.
		Envelope []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Args is the args argument value.
			Args payd.EnvelopeArgs
			// Req is the req argument value.
			Req dpp.PaymentRequest
		}
	}
	lockEnvelope sync.RWMutex
}

// AncestryCreate calls EnvelopeFunc.
func (mock *EnvelopeServiceMock) AncestryCreate(ctx context.Context, args payd.EnvelopeArgs, req dpp.PaymentRequest) (*spv.Envelope, error) {
	if mock.EnvelopeFunc == nil {
		panic("EnvelopeServiceMock.EnvelopeFunc: method is nil but AncestryService.AncestryCreate was just called")
	}
	callInfo := struct {
		Ctx  context.Context
		Args payd.EnvelopeArgs
		Req  dpp.PaymentRequest
	}{
		Ctx:  ctx,
		Args: args,
		Req:  req,
	}
	mock.lockEnvelope.Lock()
	mock.calls.Envelope = append(mock.calls.Envelope, callInfo)
	mock.lockEnvelope.Unlock()
	return mock.EnvelopeFunc(ctx, args, req)
}

// EnvelopeCalls gets all the calls that were made to AncestryCreate.
// Check the length with:
//     len(mockedEnvelopeService.EnvelopeCalls())
func (mock *EnvelopeServiceMock) EnvelopeCalls() []struct {
	Ctx  context.Context
	Args payd.EnvelopeArgs
	Req  dpp.PaymentRequest
} {
	var calls []struct {
		Ctx  context.Context
		Args payd.EnvelopeArgs
		Req  dpp.PaymentRequest
	}
	mock.lockEnvelope.RLock()
	calls = mock.calls.Envelope
	mock.lockEnvelope.RUnlock()
	return calls
}
